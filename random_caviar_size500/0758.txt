MAX(MOD(LT(LE(LT(MIN(MIN(MOD(MAX(v0,NOT(MINUS(v3,v4))),v2),MUL(LT(NUMNEG82,AND(v4,MOD(MOD(LE(LT(MUL(NUM36,v2),ABS(v4)),v2),v4),ABS(LT(MUL(NUMNEG89,MOD(v2,v2)),MOD(EQ(NUM18,v2),v3)))))),AND(LT(GE(EQ(MIN(NUM95,MAX(AND(NUM73,NUM19),v0)),AND(MINUS(v0,v2),NUMNEG66)),v4),NE(NUM85,MINUS(v2,v0))),MOD(NUMNEG57,LT(MAX(v2,ABS(NUM57)),LE(v3,v2)))))),GE(MIN(AND(NE(NUM87,EQ(v1,v0)),OR(v3,NUM97)),MAX(ABS(v4),AND(GE(EQ(v4,v1),NUMNEG44),GT(MUL(NUMNEG26,NUMNEG71),EQ(v1,NUM24))))),MUL(v0,MUL(v2,NUMNEG42)))),GE(LE(LT(OR(v1,MIN(v2,v4)),PLUS(NUMNEG45,v4)),MOD(v4,MOD(ABS(NUM12),v0))),NE(NUMNEG79,v4))),ABS(ABS(MIN(NUMNEG42,NUM75)))),GE(DIV(NE(v2,v2),ABS(MIN(v3,NOT(NUMNEG33)))),MOD(OR(EQ(NUM28,v0),MUL(AND(v3,NUM24),NUMNEG85)),PLUS(MIN(LT(NUM51,NOT(NUM85)),MOD(NUMNEG76,NUM21)),NUM50)))),GE(MIN(OR(GT(MINUS(MUL(MIN(NUMNEG5,NUM58),MAX(NUMNEG54,NUMNEG35)),MIN(NUMNEG53,NUM92)),AND(ABS(v1),ABS(v0))),MUL(MOD(NOT(MUL(v0,EQ(v4,NUM45))),NUM4),LT(v0,MOD(v1,MINUS(NUMNEG45,v1))))),MAX(GE(v4,v0),GT(GE(v3,NUM49),PLUS(NUMNEG52,v0)))),ABS(MIN(NE(AND(NE(MOD(v0,NUMNEG35),GT(NUMNEG42,NUM75)),MIN(NUMNEG5,MOD(LT(v3,NUMNEG5),v1))),GE(MIN(LT(NUMNEG89,NUM80),MIN(NUM31,v3)),GT(GE(v2,MUL(NUM86,MAX(NUM67,v3))),MUL(NE(AND(NUM88,v4),EQ(v2,NUM38)),v1)))),LE(AND(OR(EQ(PLUS(v2,NUM20),GT(NUM34,v2)),v4),DIV(MIN(AND(NUMNEG71,v4),NOT(NOT(v0))),NOT(EQ(ABS(NUMNEG68),DIV(v0,NUMNEG59))))),MUL(NE(GT(v1,NUMNEG85),OR(v2,MUL(ABS(PLUS(NUMNEG5,NUMNEG24)),ABS(MIN(EQ(GT(PLUS(v3,NUMNEG27),v0),v1),MIN(MIN(v4,NUMNEG90),v2)))))),PLUS(OR(MIN(NUMNEG88,EQ(v0,v4)),NOT(MOD(LE(EQ(v0,NUM98),MIN(NUM70,v1)),NOT(OR(v4,NUMNEG38))))),LT(DIV(AND(v4,NUMNEG75),DIV(v2,MAX(NUM27,NUMNEG23))),PLUS(PLUS(OR(v4,NUMNEG73),MAX(NUMNEG81,NUMNEG43)),MINUS(v3,v2)))))))))),EQ(AND(MAX(v4,OR(v0,EQ(v4,NUMNEG34))),NE(NUM90,LE(OR(NUMNEG12,v3),NE(ABS(NOT(NOT(MOD(OR(MINUS(NUMNEG79,NUM95),v3),NUMNEG73)))),MUL(v2,v1))))),NE(AND(GT(PLUS(NUMNEG25,v4),GT(v0,v0)),NE(NE(ABS(MINUS(GE(v3,NUM57),v0)),MOD(v0,v2)),DIV(NUM32,MIN(GT(v2,v3),MUL(GT(v4,v2),NUMNEG7))))),v2)))