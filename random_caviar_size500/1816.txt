LE(PLUS(PLUS(PLUS(DIV(NUMNEG2,MUL(EQ(LE(LE(ABS(MAX(v0,NUMNEG92)),EQ(v3,v4)),NUMNEG8),MIN(ABS(GT(v2,NUM64)),NOT(v1))),EQ(NUMNEG89,NUM91))),DIV(LT(v2,NUMNEG47),NE(LT(GT(v0,AND(v2,EQ(NUM8,v0))),GT(GE(NUMNEG96,OR(ABS(NE(NUM82,NUMNEG8)),ABS(NUMNEG33))),v1)),PLUS(NUMNEG66,MAX(MUL(MINUS(NUMNEG39,NUMNEG95),LT(OR(v1,v0),MUL(NUMNEG1,NUMNEG37))),v3))))),MUL(EQ(MAX(MOD(NUMNEG24,LT(NUM89,v2)),MIN(MAX(AND(NE(MIN(v4,v1),v0),MAX(DIV(v3,AND(MIN(v3,NUMNEG17),NOT(MIN(MAX(NUM83,v2),ABS(NUMNEG42))))),AND(NUMNEG93,NUM15))),LE(LT(NUMNEG19,v3),v2)),LE(NUM8,GT(NUM71,GE(NUMNEG98,v1))))),AND(NOT(NE(OR(MIN(v1,NUMNEG94),NUMNEG95),ABS(MIN(ABS(NUMNEG8),LE(AND(PLUS(MOD(NUM66,ABS(NUMNEG75)),EQ(NE(v2,OR(OR(MINUS(v0,NUMNEG5),EQ(NUM14,NUM99)),v2)),MAX(NUMNEG85,NOT(NOT(NUMNEG29))))),MINUS(MINUS(MAX(v2,v4),v1),PLUS(v1,MAX(MIN(v4,NUM19),LE(DIV(v2,v2),NE(NUMNEG54,GT(EQ(NUM55,MOD(NUMNEG24,NUMNEG93)),AND(DIV(NUMNEG39,NUMNEG60),NUM77)))))))),ABS(GT(MOD(NUMNEG61,NUM71),ABS(GE(AND(NUM81,v1),LT(OR(v4,MIN(NUMNEG54,v0)),MIN(NUMNEG96,EQ(v2,MUL(MOD(AND(DIV(NUM9,v4),v4),v2),NE(GT(NUM8,NUM38),GE(NUMNEG29,v0))))))))))))))),PLUS(OR(MINUS(NUM38,v2),MAX(ABS(GE(GE(v3,v1),v4)),LE(MOD(NUMNEG9,NUMNEG34),MINUS(v4,ABS(NUMNEG94))))),MUL(ABS(NUMNEG0),EQ(v0,NUMNEG33))))),MOD(DIV(NUMNEG20,NUM9),NE(v1,v0)))),AND(GT(MIN(MIN(OR(DIV(NUM65,AND(NUMNEG81,NUM39)),v2),NUMNEG67),MIN(MINUS(MINUS(v2,NUM50),v0),LE(OR(EQ(DIV(DIV(NUMNEG85,NUMNEG42),v0),NUM54),LT(NUMNEG84,EQ(GE(v3,LE(v3,NUM36)),OR(v4,NOT(NUMNEG45))))),NE(NUMNEG69,v1)))),EQ(NOT(PLUS(MIN(GE(EQ(NUM2,MIN(NUM71,AND(MIN(NUMNEG62,NUM58),MAX(GE(PLUS(LT(v4,v1),MAX(NUM25,NUM76)),MIN(EQ(v3,NUMNEG90),MIN(LT(GT(v3,DIV(v0,NUMNEG33)),v4),NE(NUMNEG19,v4)))),LT(GT(PLUS(NUMNEG83,v1),MINUS(v3,NE(LE(v3,NUM38),MIN(NUMNEG66,NUMNEG52)))),LE(MOD(NUMNEG77,v3),NUM17)))))),GT(v1,OR(EQ(NUMNEG21,NUM23),NUM15))),LT(LE(NUM67,LE(MIN(GE(OR(NUM91,MIN(NUMNEG36,NUMNEG90)),v2),EQ(v2,AND(NUM73,NUM83))),NE(v0,MUL(v4,v0)))),NE(LE(MUL(MOD(v4,NUM95),NUMNEG58),GE(NUMNEG25,GE(LT(v3,NUM52),NUM29))),MUL(DIV(v1,v0),v0)))),OR(MINUS(MUL(NUM7,NUMNEG26),DIV(NE(NUM64,NUMNEG53),NE(LE(NUM25,v0),v0))),OR(v1,PLUS(v1,OR(NUMNEG74,v3)))))),OR(MIN(LT(ABS(EQ(LE(v3,v2),MINUS(EQ(v1,NUMNEG51),MOD(NUM7,NUM37)))),NUMNEG17),DIV(EQ(GE(v2,NE(NUMNEG33,v2)),v1),NE(GT(MAX(ABS(MINUS(LT(GT(NUMNEG78,v2),NUM86),NOT(NE(v0,NUM39)))),NUMNEG65),NUM69),EQ(PLUS(LE(NUM27,DIV(LT(NUM12,v4),v3)),NUMNEG91),DIV(NUMNEG60,MINUS(v1,NUM94)))))),MAX(GE(v4,v3),ABS(v3))))),NOT(GE(MIN(NUM59,MINUS(MOD(NUMNEG41,GT(NUM37,v0)),LT(NE(ABS(EQ(v1,v2)),GE(ABS(v2),GT(MINUS(v1,NUM44),NOT(v1)))),PLUS(MIN(NUMNEG42,v2),MUL(MOD(v2,NUM68),v3))))),LT(NE(EQ(v1,v3),NUMNEG38),MINUS(LT(MIN(NUM66,ABS(v2)),v0),v4)))))),MUL(AND(MUL(LT(MAX(NE(GE(ABS(GE(MIN(EQ(NUM8,v4),v4),GE(NUM79,v1))),OR(NUMNEG69,DIV(NUMNEG98,v0))),NOT(MAX(NUM84,NUMNEG5))),v0),EQ(NUMNEG48,NUMNEG54)),NOT(MUL(LT(MOD(LE(MOD(v4,v4),MOD(v3,AND(v0,v1))),NE(LE(AND(v4,v1),NUMNEG2),EQ(NUM0,v0))),MAX(LE(v4,NUM33),MUL(MAX(NE(NE(NUMNEG35,MAX(v0,NUMNEG68)),LE(NUM20,v2)),NUM49),v1))),GE(MINUS(GT(MIN(NUMNEG73,NUM36),MOD(MOD(NUMNEG67,NE(NUM53,v3)),GE(MAX(v2,v2),PLUS(PLUS(NE(NUMNEG89,v4),MUL(v0,NUMNEG16)),NUM99)))),LT(MOD(LT(v1,NUMNEG6),MIN(MOD(NUM99,v1),LT(v2,NUM61))),AND(OR(MUL(GE(NUMNEG45,v0),DIV(NUM56,NUMNEG96)),MIN(MINUS(NUM60,NE(v0,EQ(NUMNEG57,v1))),AND(MINUS(v4,v4),LT(NUMNEG6,v4)))),EQ(v1,NUMNEG33)))),MINUS(v2,MIN(NUM45,AND(v0,v1))))))),AND(AND(MAX(NUMNEG71,NUM81),PLUS(v4,MINUS(NUMNEG78,MOD(MUL(MOD(PLUS(v1,NUMNEG28),v4),NUMNEG36),GE(NUMNEG70,NUM24))))),LE(MUL(MUL(v3,DIV(NUM81,v2)),DIV(NUMNEG76,v3)),LT(NUMNEG8,ABS(NE(GT(NUMNEG95,NUMNEG45),NUM65)))))),NE(MOD(LT(GT(MAX(NUM32,v2),AND(NUMNEG55,NUMNEG63)),AND(v2,v2)),NUM86),MUL(LE(NUM90,NOT(MOD(NUMNEG34,v0))),AND(MINUS(MOD(NOT(GT(OR(v1,OR(v1,NUM15)),GE(v4,v2))),DIV(MAX(GT(v3,GT(GE(v0,NUMNEG46),MUL(NUM68,GE(v2,GT(v2,v0))))),LT(ABS(OR(MINUS(NUM10,NUMNEG50),MIN(NUM90,v3))),v1)),NUMNEG56)),LT(v0,v2)),EQ(GT(GT(MOD(PLUS(OR(NUMNEG26,GT(v1,NUM25)),v1),NUM63),NUMNEG58),LE(v1,PLUS(NUMNEG27,GE(v4,NUMNEG74)))),v3))))))