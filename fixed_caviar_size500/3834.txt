MUL(MINUS(LT(GE(NOT(GT(NE(DIV(MUL(v2,NUM84),DIV(NUMNEG75,ABS(EQ(NUM15,OR(NUM72,NOT(v2)))))),NE(v4,v2)),ABS(EQ(MOD(MINUS(v3,ABS(EQ(v2,v3))),MUL(PLUS(v2,NUMNEG22),MAX(GE(v3,NUMNEG81),ABS(v1)))),PLUS(MINUS(MOD(NUMNEG14,NUM45),NE(NUM38,AND(GT(NOT(NUM97),GE(NUMNEG37,v3)),DIV(v0,NUMNEG78)))),OR(NOT(PLUS(MUL(EQ(NUM21,NUMNEG6),v1),MUL(LT(v1,v2),LT(v4,MUL(NUM40,v2))))),MUL(v4,NOT(MUL(v3,NUMNEG26))))))))),OR(MAX(NE(NUMNEG29,v3),MINUS(MOD(NE(v0,v4),LT(NUM14,v3)),v0)),LT(MAX(NUMNEG4,MIN(v0,AND(NUM84,GE(EQ(v0,NUMNEG74),v1)))),NOT(v2)))),AND(ABS(MOD(MAX(v0,v2),ABS(NE(MOD(v4,NUMNEG96),MAX(EQ(v3,NUM37),v4))))),MIN(GT(v4,OR(LE(NUMNEG26,AND(NUMNEG5,v4)),GE(v4,DIV(v0,NUM81)))),LE(PLUS(MOD(LE(MUL(NOT(DIV(GT(NUMNEG17,GT(GE(NUMNEG81,v3),NUM90)),NUMNEG35)),DIV(v0,v4)),MAX(NUM53,MINUS(v0,PLUS(v4,NUMNEG58)))),v1),LT(GE(OR(MIN(v4,NUM14),MIN(MIN(GT(v3,MAX(NUMNEG93,NUMNEG31)),NUM19),LT(v4,NUMNEG94))),MUL(MUL(MAX(v4,NUMNEG51),NUMNEG49),MOD(NUMNEG28,NUMNEG31))),AND(LE(v1,NUM34),MIN(AND(v2,v4),LT(AND(MUL(NUMNEG47,NUMNEG62),NUM56),v4))))),NE(LT(NOT(NOT(MIN(MINUS(NOT(MUL(NUMNEG96,LE(v3,v0))),MUL(MUL(NUMNEG81,MINUS(v4,v2)),EQ(NUM27,NUMNEG43))),NUM94))),ABS(PLUS(NUMNEG71,NUMNEG42))),GE(LE(v3,OR(MIN(v0,v3),NE(LT(NUM8,v3),v0))),GE(MIN(v0,DIV(NUM94,LT(MAX(NUM48,NUMNEG59),NUM50))),v1))))))),ABS(LT(NE(EQ(MOD(OR(v1,GE(NUMNEG63,LE(NUMNEG24,v0))),MAX(GE(ABS(NOT(LE(NUMNEG53,v4))),NUM59),AND(MINUS(v0,AND(NUM15,v3)),EQ(PLUS(v2,NUMNEG9),DIV(ABS(MIN(NUM53,NUM73)),v0))))),LE(MINUS(OR(MINUS(v4,PLUS(MAX(v1,NUMNEG92),NUM16)),MINUS(v2,v1)),DIV(NUMNEG96,OR(v1,v3))),v0)),OR(MAX(v0,GT(OR(MINUS(LE(v0,v2),NUMNEG87),NE(NUM64,v3)),LE(v4,NUMNEG39))),DIV(v0,NOT(NOT(GT(MIN(LT(OR(NUMNEG57,MUL(NUM59,v1)),EQ(AND(AND(PLUS(v2,v3),NUM37),NUM63),MIN(OR(NUM6,DIV(v3,NUMNEG37)),NUMNEG99))),MUL(v0,GE(NOT(NUMNEG0),NUM49))),NE(v0,v1))))))),NE(ABS(MOD(v2,PLUS(NUM64,NE(v2,NUMNEG29)))),ABS(NOT(OR(NUM99,DIV(LE(NUMNEG59,NUM3),v4)))))))),ABS(OR(MIN(LE(MIN(DIV(GT(EQ(DIV(NUM25,NUMNEG80),NUMNEG2),GE(v1,OR(NUM37,NUM99))),MAX(ABS(NUM77),NUM65)),MIN(v4,GE(MAX(MUL(v3,OR(v0,v2)),DIV(MOD(NUMNEG53,v0),NUMNEG69)),NUM61))),MOD(v1,LE(MIN(v2,NUMNEG72),MAX(NUMNEG43,v0)))),MINUS(MAX(NOT(LT(LT(NUMNEG72,NUMNEG60),MINUS(GE(NUMNEG30,AND(GT(v4,LT(v0,NUMNEG88)),GE(NUMNEG23,v0))),GT(v2,NUMNEG15)))),NOT(NE(MUL(ABS(EQ(v4,v1)),v2),OR(PLUS(NOT(NOT(NUMNEG56)),NUM41),MUL(NUM60,NOT(NUM73)))))),MOD(EQ(OR(MOD(MOD(v4,MINUS(NUM99,v4)),NUM83),NUMNEG41),DIV(MINUS(MUL(NUM82,NUMNEG45),v4),EQ(NUM97,v1))),EQ(DIV(GE(EQ(EQ(LE(NE(NOT(v1),NUM84),GE(v0,LE(AND(NUMNEG8,v4),NUM78))),v3),OR(NOT(MOD(NE(NUMNEG91,NUM93),OR(NOT(v1),DIV(v2,NOT(NUM98))))),MINUS(MIN(MAX(v2,MUL(MIN(v3,NUMNEG11),NE(v0,v2))),v1),NUM84))),v0),NOT(MIN(MAX(LT(v1,MIN(MOD(v4,v4),NUMNEG18)),OR(v3,NE(MOD(LT(GE(v3,v4),MINUS(NE(v3,NUMNEG79),v2)),v4),v0))),GT(DIV(MIN(NUMNEG84,v0),OR(NOT(NUM47),LE(v4,MUL(v1,v4)))),GT(GT(DIV(LE(GE(LE(MUL(v4,v0),MAX(NE(GT(NUM56,NUM80),MAX(PLUS(NUM51,DIV(GT(NUMNEG6,LE(NUM16,v2)),v2)),v1)),MINUS(PLUS(v2,NOT(v3)),MOD(NUMNEG77,NUM83)))),PLUS(DIV(MIN(LE(NUMNEG39,GT(MINUS(NUMNEG20,NUM50),NUMNEG82)),DIV(v3,NUMNEG32)),DIV(LT(v2,v2),NUMNEG36)),DIV(NUM19,v1))),LT(NUM44,MUL(MAX(NUMNEG40,OR(v0,MINUS(v2,NUM81))),v0))),NUM35),MUL(PLUS(NUMNEG49,OR(MINUS(NUMNEG29,v2),GT(v3,v2))),GE(NE(AND(LE(NUM64,v4),NUMNEG25),ABS(NUMNEG28)),MAX(NUMNEG67,MUL(v0,MIN(v2,v4)))))),GE(PLUS(MINUS(v0,MIN(OR(v3,OR(NUMNEG69,v4)),NUMNEG96)),NE(NUMNEG42,EQ(NE(MUL(NUM88,OR(DIV(v0,GE(v4,NUMNEG36)),AND(NUMNEG19,v2))),v4),MUL(NOT(MUL(v0,v1)),NOT(NUM59))))),MAX(NUM79,AND(v2,NUMNEG84)))))))),ABS(EQ(v0,GT(GT(MIN(GE(MINUS(GT(v4,NUM37),EQ(MINUS(NUMNEG12,MINUS(NUMNEG50,NUMNEG80)),OR(MINUS(v2,v2),DIV(MOD(MOD(LE(v1,NUM58),LE(NE(GE(GT(v1,v1),NUM13),MOD(NUM51,NUMNEG5)),v0)),NUM85),MUL(v1,PLUS(NUM13,NUM92)))))),MIN(MINUS(OR(v4,v2),v3),GT(MINUS(NUMNEG35,v0),MINUS(GT(NUMNEG50,PLUS(v0,v0)),v2)))),EQ(DIV(v3,DIV(DIV(NUM4,NUMNEG88),v4)),AND(MINUS(DIV(OR(NUM20,NUMNEG77),MAX(v0,GE(v0,v1))),LE(v0,NOT(v0))),MAX(NUM78,v4)))),ABS(MINUS(NUMNEG56,MAX(MUL(NUM55,LE(MIN(NUM72,NUM69),v4)),NUMNEG42)))),OR(PLUS(NUMNEG40,v2),NE(AND(NUMNEG5,AND(ABS(GE(MIN(DIV(NE(NUMNEG56,v0),MINUS(NUM10,NUM96)),GE(DIV(v1,NUM95),v0)),EQ(NE(NUM55,MOD(NUM32,NUM65)),NOT(MIN(GE(NOT(v4),NUM59),NOT(MIN(NOT(NE(v0,v3)),GT(v4,EQ(MOD(NUM4,NUM43),NOT(EQ(NUMNEG53,NUM28))))))))))),MAX(v4,LT(v4,NUMNEG34)))),NOT(NOT(AND(LE(v3,NUM87),OR(EQ(PLUS(v0,v2),v3),MUL(DIV(v0,NOT(LE(NUM63,v1))),MOD(LE(v4,v4),DIV(NUMNEG36,NUM19)))))))))))))))),AND(MIN(OR(MAX(LT(v0,NUMNEG36),MAX(v2,NUM28)),MOD(v4,MIN(PLUS(NUM12,NUMNEG43),MUL(NUMNEG80,v3)))),PLUS(v4,v1)),NE(AND(AND(PLUS(NUMNEG77,MAX(v4,v0)),GT(NUMNEG78,v1)),MINUS(GT(NUMNEG42,MUL(NUM59,v1)),ABS(EQ(MIN(v3,NE(NUMNEG12,v4)),v2)))),MAX(DIV(v0,EQ(NUM22,OR(GT(GT(NUMNEG7,NUM22),NUM80),MIN(v2,v1)))),v2))))))