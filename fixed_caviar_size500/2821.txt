LE(NOT(ABS(MIN(OR(GT(NOT(PLUS(GE(v0,v0),LE(PLUS(v2,GT(AND(NOT(NUM11),v0),NUMNEG25)),MINUS(NUM50,NUM50)))),GT(v1,GT(NUMNEG96,NUM65))),MAX(NE(OR(MUL(NUMNEG81,v1),NE(NUM84,EQ(v0,v3))),LT(NE(MUL(AND(NE(GE(OR(v4,v1),NUM55),v2),NUMNEG36),EQ(MIN(NUM59,ABS(MOD(OR(v1,ABS(NOT(v3))),NUMNEG84))),MINUS(v0,v0))),LT(PLUS(v1,LT(AND(v2,NUM23),MUL(ABS(GE(MIN(v4,PLUS(v1,NUM18)),NUMNEG53)),GT(NUMNEG98,MOD(NUMNEG24,NUMNEG30))))),MAX(NE(v2,NOT(GE(NE(MINUS(MAX(NUMNEG85,v4),GE(v4,NUMNEG6)),OR(EQ(MINUS(NUMNEG17,v2),NUMNEG78),AND(v4,v3))),NUMNEG4))),PLUS(GE(v3,EQ(NUM37,v2)),ABS(MINUS(MINUS(v2,v2),MOD(MUL(NUMNEG7,v0),MIN(NOT(LT(v2,v2)),NUMNEG13)))))))),MOD(AND(LT(NE(v4,v2),v0),MIN(NUM56,v3)),LE(EQ(LE(v0,MUL(NUMNEG75,NUMNEG99)),NE(v3,DIV(NUM52,v0))),AND(ABS(NUMNEG91),ABS(v0)))))),DIV(MINUS(MOD(MOD(v2,NUM26),NUMNEG19),MUL(DIV(GE(MIN(v1,v0),DIV(MAX(GT(MIN(v4,v3),MIN(v2,NUM23)),NUM84),NUMNEG15)),NE(NUM35,NUM37)),LE(v3,MIN(AND(DIV(v0,NUM5),GE(OR(AND(NUMNEG41,NUM5),NOT(MAX(OR(v4,v4),v3))),OR(v3,v1))),v3)))),PLUS(DIV(NUM42,v1),DIV(GT(LE(NUMNEG22,NUMNEG93),NOT(MINUS(v4,AND(OR(NUMNEG82,v2),NUMNEG39)))),PLUS(EQ(MOD(LT(GE(v0,NOT(v1)),EQ(DIV(NUMNEG21,ABS(MUL(v0,NUM72))),OR(DIV(v1,GE(v3,NUMNEG18)),NUMNEG25))),NOT(MINUS(NUM4,MINUS(NUMNEG83,MOD(v4,v4))))),LE(MINUS(v4,NUMNEG96),GE(EQ(EQ(MIN(v4,LT(NUM3,v4)),PLUS(v3,v4)),MINUS(NUMNEG32,NUMNEG95)),MINUS(v3,MINUS(NUMNEG65,NUM18))))),NE(NOT(MINUS(MINUS(MUL(NUM23,MUL(NOT(NUM69),AND(MOD(GE(LT(v3,NUM21),MIN(v2,NUM3)),NUMNEG22),NUMNEG43))),PLUS(v2,MAX(NUM37,v3))),GE(GT(OR(v2,DIV(v1,NE(NUMNEG85,NUMNEG65))),MOD(GE(NUM59,MINUS(NOT(MIN(v2,MINUS(NUMNEG66,LT(NUMNEG22,v4)))),v4)),MAX(NUM79,NOT(v2)))),MIN(v3,PLUS(NUMNEG14,v1))))),MUL(MUL(MUL(GT(MINUS(MINUS(GT(v4,NUM48),v1),GE(NUMNEG55,NUMNEG81)),EQ(NUM95,v0)),MUL(MOD(v2,NUM92),GE(EQ(v4,NUMNEG80),v2))),MAX(ABS(NUMNEG50),NOT(MUL(MINUS(MINUS(v2,NUMNEG70),MAX(NUM52,MIN(v2,v2))),NE(NUM62,NUM86))))),EQ(v3,NE(NUMNEG55,v2)))))))))),GT(MUL(GT(GE(GE(EQ(MIN(NUMNEG18,GE(NUMNEG4,DIV(NUM28,v0))),NUMNEG9),MINUS(NUMNEG32,ABS(NUMNEG45))),PLUS(NOT(MIN(NOT(MINUS(AND(ABS(v2),OR(LT(PLUS(v3,NUMNEG91),PLUS(NUM28,OR(MAX(NUM95,NUMNEG28),DIV(v4,NUMNEG3)))),NOT(v1))),EQ(MINUS(NUMNEG10,NUMNEG95),EQ(DIV(v3,NUM11),MINUS(MOD(LE(ABS(v4),v4),NUM94),PLUS(v2,NUM80)))))),GE(DIV(MINUS(v0,NUM4),NUM52),AND(GT(NUMNEG64,v1),ABS(NUM17))))),NOT(MAX(AND(MOD(MAX(NUM46,NUMNEG17),OR(NE(v4,v0),v4)),LE(NE(GT(OR(v0,NOT(v0)),NOT(NUMNEG66)),MIN(OR(NUM16,NUM55),NUM65)),DIV(NUMNEG10,GT(EQ(v4,LT(v0,NUMNEG16)),NUM67)))),v1)))),MAX(NE(NE(MOD(NE(NUM88,LT(v0,v2)),MOD(v4,NUMNEG29)),NUM38),DIV(MUL(PLUS(v0,v3),NUM27),NUMNEG50)),GE(PLUS(v3,v4),NOT(LE(v2,v3))))),PLUS(EQ(DIV(NOT(EQ(NUM36,AND(OR(LE(v1,v1),NUM33),MOD(v0,NUMNEG20)))),GE(MIN(NUM34,NOT(NUMNEG23)),DIV(OR(v4,ABS(v4)),LT(v3,v2)))),GT(MINUS(v1,MAX(LE(v1,DIV(NUM96,v4)),OR(NUM41,NUM97))),LE(EQ(NUM20,PLUS(v0,NUM94)),NUM18))),GE(GT(GT(GE(GT(MOD(NUMNEG14,NUMNEG96),NUM75),PLUS(MOD(v1,MAX(v3,v2)),NUM79)),NOT(DIV(MIN(ABS(v3),NOT(MAX(NUM59,v2))),LT(MAX(NUM31,NOT(v4)),NUM65)))),MIN(MIN(LE(NUMNEG67,NUMNEG62),EQ(v2,v3)),GE(GE(GE(PLUS(v1,v3),OR(v0,MOD(PLUS(PLUS(LE(NUMNEG68,NUM13),GE(NUMNEG81,v3)),NUMNEG14),v0))),MUL(EQ(AND(MOD(MIN(NUMNEG47,v1),NE(NE(MINUS(NUMNEG86,NUM42),LT(NUM81,ABS(v0))),v0)),GT(MUL(NUM21,v4),NOT(NUM41))),NUMNEG81),GT(NUMNEG97,NOT(v3)))),LE(NE(NUMNEG52,GE(v4,v4)),NOT(OR(NUMNEG59,NUM5)))))),PLUS(v1,MINUS(GE(NUMNEG20,v0),NUMNEG64))))),PLUS(PLUS(EQ(NUMNEG12,NUMNEG32),LE(MUL(MINUS(NOT(GT(MAX(MUL(v3,v2),GE(NUM42,GE(v3,v1))),NUM90)),GE(ABS(NUM98),NUMNEG30)),LE(v4,MIN(AND(v0,OR(DIV(NUMNEG16,v0),NUMNEG49)),v1))),v3)),ABS(MUL(MIN(NOT(LT(NUM56,OR(GE(LT(NE(v3,NUMNEG14),EQ(v0,v4)),MAX(MINUS(v4,EQ(MIN(NUMNEG19,v3),NUM58)),PLUS(v4,NUM9))),NUM9))),GE(v3,NOT(NUM23))),NE(AND(AND(v4,MAX(MUL(NUM18,NUM76),MIN(PLUS(NUM13,v2),v1))),MAX(MINUS(NUMNEG23,DIV(OR(OR(DIV(NUM59,v3),v2),OR(NUM85,NUMNEG46)),MINUS(DIV(NUMNEG53,AND(NOT(NUM58),MIN(MOD(NUMNEG13,v2),v2))),v2))),NOT(NE(OR(MAX(NE(NUMNEG5,OR(NUM1,v3)),v3),NUM2),OR(NUMNEG9,v1))))),MUL(GT(MINUS(PLUS(NUMNEG81,MUL(NUM12,v0)),OR(MINUS(NE(v1,v0),PLUS(NUMNEG38,LT(NUMNEG57,GE(v3,v4)))),LT(AND(v2,MUL(NUMNEG47,v3)),LE(DIV(v4,v4),AND(v1,NUMNEG28))))),MAX(EQ(DIV(NUM44,NUMNEG22),v3),GT(NOT(NUM90),v0))),PLUS(NUMNEG11,v0)))))))))),PLUS(AND(MAX(LT(MAX(NUMNEG33,PLUS(NE(v4,v3),NUM4)),GE(GE(MINUS(NUMNEG66,v4),OR(EQ(DIV(v4,v3),v3),ABS(v4))),DIV(PLUS(NUMNEG53,MUL(AND(NUM92,v2),ABS(NUM86))),LE(v1,LT(GE(NUM89,NUMNEG84),v2))))),MUL(OR(LT(v2,v4),v4),v0)),GE(MOD(NUM67,MINUS(GT(v4,OR(v2,v2)),MOD(NUM56,v2))),NUM85)),GT(NOT(NE(LE(MIN(NUM36,NE(NUMNEG47,v2)),v0),LT(OR(v4,NUMNEG5),NOT(NUMNEG31)))),MOD(OR(NUM17,EQ(DIV(LE(v3,v0),EQ(DIV(v0,v0),NUM83)),GT(ABS(MAX(NE(MAX(NUMNEG66,NUMNEG88),NUM26),MOD(GT(NUM26,EQ(NUM66,v3)),v0))),EQ(LE(NUMNEG55,NUM0),NUMNEG53)))),PLUS(NUM43,v4)))))