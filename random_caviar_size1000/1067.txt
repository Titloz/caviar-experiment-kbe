MINUS(DIV(MIN(NUM20,NUM59),MINUS(v0,NUM64)),DIV(NE(LT(NOT(GT(DIV(NOT(OR(NOT(OR(PLUS(AND(NUM80,NUM19),GT(GE(MINUS(MAX(MAX(NUM91,NUM51),GT(NUMNEG17,OR(NUM90,PLUS(v1,NUM75)))),MIN(MAX(v3,OR(v3,v3)),MIN(LE(v4,v4),NUMNEG17))),LE(v1,DIV(v1,EQ(v4,NUM44)))),DIV(NUMNEG94,MINUS(NUMNEG17,PLUS(NUMNEG68,v1))))),GE(MIN(AND(NUM58,NUMNEG42),NUM86),MIN(v2,NUMNEG99)))),AND(AND(NUM26,NUM27),NE(EQ(EQ(MINUS(DIV(v0,v1),MIN(v3,NUM44)),v2),NOT(PLUS(v0,v4))),v2)))),GE(ABS(DIV(GT(v4,v0),GE(MOD(DIV(NUMNEG89,NE(v2,ABS(DIV(NUM18,v3)))),GT(v4,v2)),NUMNEG68))),GT(AND(GT(MAX(MUL(v1,v1),PLUS(v1,v0)),v1),NE(DIV(DIV(AND(MOD(NE(v4,v2),v3),NUMNEG2),MUL(v2,NUMNEG20)),AND(AND(v2,NUMNEG82),NUM17)),OR(ABS(NOT(v2)),NOT(NUMNEG72)))),MIN(MOD(AND(NOT(NUMNEG95),NUMNEG58),v1),NUM17)))),MOD(MIN(v1,v1),LT(MAX(NE(MOD(GE(DIV(NUM84,NUMNEG50),OR(NUMNEG88,NE(NE(NUM6,NUM53),GE(v0,v0)))),LT(v1,NUM20)),NOT(MOD(MOD(NUMNEG88,v4),v4))),v3),EQ(MIN(EQ(NUM23,LT(NUMNEG17,v1)),GT(MAX(OR(NUMNEG92,NUM25),LT(NUMNEG50,NUM24)),AND(MAX(NE(EQ(v2,NUM57),v3),MUL(v1,v1)),LT(NUMNEG74,NUM60)))),NOT(PLUS(LE(NUM84,v4),v1))))))),EQ(MAX(OR(NUM62,NUMNEG99),LT(MUL(OR(AND(NUMNEG42,NUM95),v4),ABS(GT(OR(AND(NUMNEG81,NUM0),v1),AND(EQ(v0,v1),v4)))),AND(ABS(MAX(v1,MIN(NUMNEG89,v2))),MINUS(AND(NUMNEG96,v2),v4)))),EQ(EQ(MAX(EQ(OR(NOT(v1),DIV(NUMNEG36,LE(NOT(NUM77),v3))),LT(MIN(MUL(OR(v1,MIN(NUMNEG36,NUMNEG15)),NOT(PLUS(v0,NUM68))),v2),LE(v0,LT(v2,NUMNEG33)))),PLUS(PLUS(v3,MAX(GE(MOD(NUMNEG68,v3),v1),NE(v0,v3))),MUL(OR(GT(v0,NUM97),NUMNEG57),DIV(MUL(LT(NUM84,NUM43),NUM62),NUMNEG15)))),MIN(EQ(MIN(NUM24,v4),EQ(GT(NUMNEG49,v1),v3)),OR(AND(NUM90,EQ(NUMNEG63,v0)),PLUS(MOD(v1,NUM52),MINUS(MIN(v4,v4),NUM56))))),AND(MAX(v2,NE(v3,v0)),LE(LT(LE(MINUS(GE(v2,LT(v2,v2)),ABS(NUM87)),AND(MAX(NUMNEG87,NE(MIN(NUMNEG0,NUMNEG3),NUM45)),LT(LT(MOD(NUM55,ABS(PLUS(v3,NUM79))),NOT(v4)),MUL(NUM51,MUL(v2,v1))))),NE(v2,AND(OR(NUMNEG47,NUM23),NUM11))),LT(LT(MINUS(v3,v3),v4),NOT(NUMNEG40))))))),LT(GT(GE(AND(v2,EQ(NUM51,NUM19)),EQ(v1,NUM72)),NE(OR(LT(OR(MAX(MOD(NUM24,EQ(NUM11,NUM49)),AND(NUMNEG31,NUM23)),NUM57),NE(NUM38,v3)),MINUS(NUM32,EQ(NUM16,v0))),NOT(MIN(v4,LE(NUMNEG89,v2))))),ABS(MAX(MOD(PLUS(MIN(v2,LT(NUM33,NUMNEG45)),MOD(OR(GE(GT(EQ(MOD(v1,v3),AND(NUM88,GT(NUM7,GT(NUM78,AND(NUMNEG60,NUM32))))),LT(LT(v3,v3),GE(GT(v4,v3),v4))),NE(v4,AND(v4,v4))),PLUS(GE(NUMNEG92,MUL(v0,DIV(v4,NUM63))),v2)),v2)),AND(ABS(ABS(OR(ABS(MINUS(ABS(v4),LT(GT(v3,ABS(DIV(NUM69,v1))),NUM64))),AND(NUM96,NUM6)))),GE(NOT(PLUS(MAX(NUMNEG72,GE(GE(v1,NUMNEG24),NUMNEG38)),MUL(v2,v3))),PLUS(PLUS(PLUS(NUM10,v1),v1),MIN(LE(v0,MUL(NUM79,v4)),MUL(LT(NUM61,v0),NUM72)))))),LT(NOT(NUMNEG12),GT(GE(ABS(NUM41),NUM19),AND(DIV(EQ(MIN(PLUS(NUMNEG60,NUMNEG88),MAX(MOD(v3,NUM21),MUL(MINUS(NUM47,NUM95),OR(v4,NUM46)))),NUMNEG7),MINUS(v1,NE(v3,NUM60))),LE(NUMNEG18,MAX(EQ(v3,NUM30),NUMNEG44))))))))),MIN(LT(MINUS(AND(GT(LE(NUM45,v4),NUM49),NUMNEG74),MAX(v0,OR(OR(MIN(MOD(v3,NUM50),NUM56),v0),NUMNEG41))),v3),LT(NUM3,NUMNEG78))))